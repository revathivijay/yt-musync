<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <meta name="description" content="" />
    <meta name="author" content="" />
    <link rel="icon" href="../../favicon.ico" />

    <title>Youtube Mu-sync</title>

    <!-- Bootstrap core CSS -->
    <link href="css/bootstrap.min.css" rel="stylesheet" />
    <link
      href="//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap-glyphicons.css"
      rel="stylesheet"
    />

    <!-- Custom styles for this template -->
    <link href="css/main.css" rel="stylesheet" />
  </head>

  <body>
    <nav class="navbar navbar-inverse navbar-fixed-top nav-color">
      <div class="container">
        <div class="navbar-header">
          <button
            type="button"
            class="navbar-toggle collapsed"
            data-toggle="collapse"
            data-target="#navbar"
            aria-expanded="false"
            aria-controls="navbar"
          >
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a class="navbar-brand font-size" href="/">YT Mu-sync</a>
        </div>
        <div id="navbar" class="collapse navbar-collapse">
          <ul class="nav navbar-nav font-size">
            <li><a href="home">Home</a></li>
            <li><a href="video">Enter Video URL</a></li>
            <li><a href="contact">Contact Us</a></li>
          </ul>
        </div>
        <!--/.nav-collapse -->
      </div>
    </nav>
    <div class="container">
      <div class="starter-template">
        <h1>Youtube Mu-sync</h1>
        <p class="lead">Sync your youtube videos with your friends</p>
      </div>

      <div id="ytplayer"></div>
      <div id="player-controls">
        <div id="progress-bar">
          <div id="line"></div>
          <div id="circle"></div>
        </div>

        <button
          id="playButton"
          type="button"
          class="btn btn-default"
          aria-lable="Left Align"
        >
          <span
            class="glyphicon glyphicon-play control-icon-size"
            aria-hidden="true"
          ></span>
        </button>

        <button
          id="pauseButton"
          type="button"
          class="btn btn-default"
          aria-lable="Left Align"
        >
          <span
            class="glyphicon glyphicon-pause control-icon-size"
            aria-hidden="true"
          ></span>
        </button>

        <button
          id="stopButton"
          type="button"
          class="btn btn-default"
          aria-lable="Left Align"
        >
          <span
            class="glyphicon glyphicon-stop control-icon-size"
            aria-hidden="true"
          ></span>
        </button>

        <button
          type="button"
          class="btn btn-default"
          aria-lable="Left Align"
          onclick="muteVideo()"
        >
          <span
            id="mute-button"
            class="glyphicon glyphicon glyphicon-volume-off control-icon-size"
            aria-hidden="true"
          ></span>
        </button>
      </div>

      <!-- button with messages icon for chat on click opens a modal with chat box -->
      <button
        id="chat-button"
        type="button"
        class="btn btn-circle"
        data-toggle="modal"
        data-target="#myModal"
      >
        <span
          class="glyphicon glyphicon-comment control-icon-size"
          aria-hidden="true"
        ></span>
      </button>

      <!-- Modal -->
      <div
        class="modal fade"
        id="myModal"
        tabindex="-1"
        role="dialog"
        aria-labelledby="myModalLabel"
      >
        <div class="modal-dialog" role="document">
          <div class="modal-content">
            <div class="modal-header">
              <button
                type="button"
                class="close"
                data-dismiss="modal"
                aria-label="Close"
              >
                <span aria-hidden="true">&times;</span>
              </button>
              <h4 class="modal-title" id="myModalLabel">Chat</h4>
            </div>
            <div class="modal-body">
              <div id="chat-box"></div>
            </div>
            <div class="modal-footer">
              <button
                type="button"
                class="btn btn-default"
                data-dismiss="modal"
              >
                Close
              </button>
            </div>
          </div>

          <!-- Bootstrap core JavaScript
    ================================================== -->
          <!-- Placed at the end of the document so the pages load faster -->
          <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
          <script>
            window.jQuery ||
              document.write('<script src="js/jquery.min.js"><\/script>');
          </script>
          <script src="js/bootstrap.min.js"></script>
          <script src="js/socket.io.js"></script>
          <script>
            // sockets code
            var socket = io();

            socket.on("redirectEvent", function (msg) {
              console.log("State: " + msg.state);
              console.log("Redirecting to: " + msg.videoId);
              window.location.href = "/home" + "?uid=" + msg.videoId;
            });

            socket.on("playEvent", function (msg) {
              if (msg.state == "play") {
                playVideo();
              } else if (msg.state == "pause") {
                pauseVideo();
              } else if (msg.state == "stop") {
                stopVideo();
              } else if (msg.state == "seek") {
                var progressCircle = $("#circle");
                player.seekTo(msg.time);
                progressCircle.css("margin-left", time + "%");
              }
            });

            var playButton = $("#playButton");
            var pauseButton = $("#pauseButton");
            var stopButton = $("#stopButton");
            var progressBar = $("#progress-bar");
            var progressCircle = $("#circle");

            playButton.click(function () {
              mydata = {
                state: "play",
                time: player.getCurrentTime(),
              };
              socket.emit("playEvent", mydata);
            });
            pauseButton.click(function () {
              mydata = {
                state: "pause",
                time: player.getCurrentTime(),
              };
              socket.emit("playEvent", mydata);
            });
            stopButton.click(function () {
              mydata = {
                state: "stop",
                time: player.getCurrentTime(),
              };
              socket.emit("playEvent", mydata);
            });

            progressBar.click(function (event) {
              var offset = $(this).offset();
              var x = event.pageX - offset.left;
              var y = event.pageY - offset.top;
              var width = $(this).width();
              var height = $(this).height();
              var percent = x / width;
              var time = percent * player.getDuration();
              // player.seekTo(time);
              progressCircle.css("margin-left", time + "%");
              mydata = {
                state: "seek",
                time: time,
              };
              socket.emit("playEvent", mydata);
            });
          </script>
          <script>
            setInterval(progressBarClick, 0);
            function progressBarClick() {
              var progressBar = $("#progress-bar");
              var progressCircle = $("#circle");

              progressBar.click(function (event) {
                var offset = $(this).offset();
                var x = event.pageX - offset.left;
                var y = event.pageY - offset.top;
                var width = $(this).width();
                var height = $(this).height();
                var percent = x / width;
                var time = percent * player.getDuration();
                player.seekTo(time);
                progressCircle.css("margin-left", time + "%");
              });
            }
          </script>
          <script>
            // Load the IFrame Player API code asynchronously.
            var tag = document.createElement("script");
            tag.src = "https://www.youtube.com/player_api";
            var firstScriptTag = document.getElementsByTagName("script")[0];
            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

            var player;
            var videoID = window.location.href.split("uid=")[1];
            if (videoID == null) {
              // default video
              videoID = "DGGCUPHodd4";
            }

            function onYouTubePlayerAPIReady() {
              player = new YT.Player("ytplayer", {
                height: "390",
                width: "640",
                videoId: videoID,
                events: {
                  onReady: onPlayerReady,
                  onStateChange: onPlayerStateChange,
                },
                playerVars: {
                  controls: 0,
                  disablekb: 1,
                  modestbranding: 1,
                  rel: 0,
                  showinfo: 0,
                  iv_load_policy: 3,
                },
              });
            }
            function onPlayerReady(event) {
              event.target.stopVideo();
            }

            function playVideo() {
              player.playVideo();
            }

            function pauseVideo() {
              player.pauseVideo();
            }

            function stopVideo() {
              player.stopVideo();
              var progressCircle = $("#circle");
              progressCircle.css("margin-left", "0%");
            }

            // call this function when video is playing

            function updateProgressBar() {
              var progressCircle = $("#circle");
              var converted =
                (player.getCurrentTime() / player.getDuration()) * 100;
              progressCircle.css("margin-left", converted + "%");
            }

            var muteButton = $("#mute-button");
            function muteVideo() {
              if (!player.isMuted()) {
                player.mute();
              } else {
                player.unMute();
              }
            }

            function onPlayerStateChange(event) {
              if (event.data == YT.PlayerState.PLAYING) {
                var time = player.getCurrentTime();
                setInterval(updateProgressBar, 100);
              }
            }
          </script>
        </div>
      </div>
    </div>
  </body>
</html>
